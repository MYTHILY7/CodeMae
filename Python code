import os
import logging
from bs4 import BeautifulSoup

# Set up logging
logging.basicConfig(
    level=logging.INFO,
    format="%(levelname)s: %(message)s"
)
logger = logging.getLogger(__name__)

def extract_exact_product_type(soup):
    text_blocks = soup.find_all(string=True)
    for i, text in enumerate(text_blocks):
        if "product" in text.lower():
            for j in range(i + 1, min(i + 6, len(text_blocks))):
                next_text = text_blocks[j].strip()
                if next_text and next_text.lower() != "product" and len(next_text.split()) <= 6:
                    return next_text.lower()
    return None

def extract_note_page(soup):
    for heading in soup.find_all(['h1', 'h2', 'h3']):
        if heading.get_text(strip=True).lower() == "note":
            return heading.find_parent('div', class_='Page')
    return None

def extract_footer_text(note_page):
    if note_page:
        footer = note_page.find('footer')
        if footer:
            return footer.get_text(separator=' ', strip=True).lower()
        return note_page.get_text(separator=' ', strip=True).lower()
    return None

def process_html_file(file_path):
    with open(file_path, "r", encoding="utf-8") as f:
        soup = BeautifulSoup(f, "html.parser")

    product_type = extract_exact_product_type(soup)
    if not product_type:
        logger.error(f"FAIL: Product type line not found in LOAN DISCLOSURE section of file: {os.path.basename(file_path)}")
        return

    note_page = extract_note_page(soup)
    if not note_page:
        logger.error(f"FAIL: NOTE section not found in file: {os.path.basename(file_path)}")
        return

    footer_text = extract_footer_text(note_page)
    if not footer_text:
        logger.error(f"FAIL: Footer not found in NOTE section of file: {os.path.basename(file_path)}")
        return

    if product_type in footer_text:
        logger.info(f"PASS: Product type '{product_type}' matched in footer of file: {os.path.basename(file_path)}")
    else:
        logger.error(f"FAIL: Product type '{product_type}' not found in footer of file: {os.path.basename(file_path)}")

def process_directory(directory_path):
    for filename in os.listdir(directory_path):
        if filename.endswith(".html"):
            file_path = os.path.join(directory_path, filename)
            process_html_file(file_path)

if __name__ == "__main__":
    process_directory("./")
